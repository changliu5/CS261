--------------------------------------------------------------------------------
Command:            prog
Massif arguments:   (none)
ms_print arguments: massif.out.31116
--------------------------------------------------------------------------------


    MB
12.21^                                                                       #
     |                             :@::::::::::::::::::::::::::::::::::::::::#
     |                           :::@                                       :#
     |                          :@::@                                       :#
     |                        :::@::@                                       :#
     |                       :@::@::@                                       :#
     |                     @::@::@::@                                       :#
     |                   ::@::@::@::@                                       :#
     |                  :::@::@::@::@                                       :#
     |                :::::@::@::@::@                                       :#
     |              ::@::::@::@::@::@                                       :#
     |             :::@::::@::@::@::@                                       :#
     |           @::::@::::@::@::@::@                                       :#
     |          :@::::@::::@::@::@::@                                       :#
     |         ::@::::@::::@::@::@::@                                       :#
     |       ::::@::::@::::@::@::@::@                                       :#
     |     :@::::@::::@::::@::@::@::@                                       :#
     |    ::@::::@::::@::::@::@::@::@                                       :#
     |  ::::@::::@::::@::::@::@::@::@                                       :#
     | :::::@::::@::::@::::@::@::@::@                                       :#
   0 +----------------------------------------------------------------------->Mi
     0                                                                   792.8

Number of snapshots: 84
 Detailed snapshots: [14, 26, 37, 49, 59, 69, 79, 83 (peak)]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1      4,478,553          226,184          135,712        90,472            0
  2      8,213,375          394,104          236,464       157,640            0
  3     14,048,529          643,664          386,200       257,464            0
  4     17,507,779          787,504          472,504       315,000            0
  5     24,936,088        1,089,944          653,968       435,976            0
  6     31,407,551        1,347,824          808,696       539,128            0
  7     35,080,072        1,491,984          895,192       596,792            0
  8     40,292,443        1,693,984        1,016,392       677,592            0
  9     44,304,408        1,848,024        1,108,816       739,208            0
 10     50,718,916        2,091,944        1,255,168       836,776            0
 11     57,131,832        2,333,904        1,400,344       933,560            0
 12     64,340,704        2,603,384        1,562,032     1,041,352            0
 13     71,552,133        2,870,824        1,722,496     1,148,328            0
 14     75,156,586        3,004,144        1,802,488     1,201,656            0
60.00% (1,802,488B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (1,802,472B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (1,802,472B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (1,802,472B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 15     79,483,037        3,163,424        1,898,056     1,265,368            0
 16     84,529,711        3,348,624        2,009,176     1,339,448            0
 17     88,135,569        3,479,744        2,087,848     1,391,896            0
 18     91,983,742        3,619,264        2,171,560     1,447,704            0
 19     97,999,619        3,837,584        2,302,552     1,535,032            0
 20    104,015,080        4,054,584        2,432,752     1,621,832            0
 21    110,029,921        4,269,744        2,561,848     1,707,896            0
 22    114,842,132        4,442,384        2,665,432     1,776,952            0
 23    119,655,769        4,614,504        2,768,704     1,845,800            0
 24    124,467,314        4,785,064        2,871,040     1,914,024            0
 25    131,685,527        5,041,344        3,024,808     2,016,536            0
 26    137,701,572        5,252,984        3,151,792     2,101,192            0
60.00% (3,151,792B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (3,151,776B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (3,151,776B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (3,151,776B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 27    141,311,524        5,380,024        3,228,016     2,152,008            0
 28    147,326,840        5,591,584        3,354,952     2,236,632            0
 29    151,658,408        5,742,864        3,445,720     2,297,144            0
 30    155,510,930        5,877,384        3,526,432     2,350,952            0
 31    159,362,884        6,011,544        3,606,928     2,404,616            0
 32    165,142,850        6,212,664        3,727,600     2,485,064            0
 33    170,921,930        6,413,744        3,848,248     2,565,496            0
 34    174,774,409        6,547,144        3,928,288     2,618,856            0
 35    180,553,546        6,747,224        4,048,336     2,698,888            0
 36    184,407,120        6,880,624        4,128,376     2,752,248            0
 37    188,258,953        7,013,384        4,208,032     2,805,352            0
60.00% (4,208,032B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (4,208,016B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (4,208,016B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (4,208,016B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 38    192,110,989        7,146,104        4,287,664     2,858,440            0
 39    195,963,882        7,278,264        4,366,960     2,911,304            0
 40    201,742,295        7,476,824        4,486,096     2,990,728            0
 41    205,595,961        7,609,384        4,565,632     3,043,752            0
 42    211,374,416        7,806,344        4,683,808     3,122,536            0
 43    217,154,212        8,004,264        4,802,560     3,201,704            0
 44    221,007,252        8,135,944        4,881,568     3,254,376            0
 45    224,859,614        8,266,864        4,960,120     3,306,744            0
 46    230,637,539        8,463,624        5,078,176     3,385,448            0
 47    236,416,504        8,659,744        5,195,848     3,463,896            0
 48    240,269,676        8,790,784        5,274,472     3,516,312            0
 49    246,049,309        8,987,304        5,392,384     3,594,920            0
60.00% (5,392,384B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (5,392,368B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (5,392,368B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (5,392,368B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 50    249,509,347        9,104,504        5,462,704     3,641,800            0
 51    252,969,888        9,221,544        5,532,928     3,688,616            0
 52    256,429,884        9,338,944        5,603,368     3,735,576            0
 53    259,890,330        9,455,744        5,673,448     3,782,296            0
 54    263,350,366        9,572,344        5,743,408     3,828,936            0
 55    266,810,741        9,689,344        5,813,608     3,875,736            0
 56    270,270,438        9,805,664        5,883,400     3,922,264            0
 57    273,731,035        9,922,584        5,953,552     3,969,032            0
 58    277,190,556       10,039,144        6,023,488     4,015,656            0
 59    280,649,904       10,154,704        6,092,824     4,061,880            0
60.00% (6,092,824B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (6,092,808B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (6,092,808B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (6,092,808B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 60    284,109,805       10,270,504        6,162,304     4,108,200            0
 61    287,569,740       10,386,584        6,231,952     4,154,632            0
 62    291,030,154       10,502,704        6,301,624     4,201,080            0
 63    294,489,919       10,618,544        6,371,128     4,247,416            0
 64    297,950,277       10,734,624        6,440,776     4,293,848            0
 65    301,410,013       10,849,624        6,509,776     4,339,848            0
 66    304,870,397       10,965,264        6,579,160     4,386,104            0
 67    308,330,137       11,080,784        6,648,472     4,432,312            0
 68    311,789,413       11,195,824        6,717,496     4,478,328            0
 69    315,248,816       11,311,424        6,786,856     4,524,568            0
60.00% (6,786,856B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (6,786,840B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (6,786,840B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (6,786,840B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 70    318,708,281       11,426,904        6,856,144     4,570,760            0
 71    322,167,621       11,542,024        6,925,216     4,616,808            0
 72    325,627,539       11,657,664        6,994,600     4,663,064            0
 73    329,087,743       11,772,624        7,063,576     4,709,048            0
 74    332,547,082       11,887,064        7,132,240     4,754,824            0
 75    336,007,569       12,002,424        7,201,456     4,800,968            0
 76    339,467,760       12,117,024        7,270,216     4,846,808            0
 77    342,927,888       12,231,984        7,339,192     4,892,792            0
 78    346,387,503       12,346,704        7,408,024     4,938,680            0
 79    349,847,848       12,461,424        7,476,856     4,984,568            0
60.00% (7,476,856B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (7,476,840B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (7,476,840B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (7,476,840B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (16B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 80    353,307,157       12,576,304        7,545,784     5,030,520            0
 81    356,767,074       12,690,424        7,614,256     5,076,168            0
 82    816,580,975       12,800,064        7,680,040     5,120,024            0
 83    831,305,784       12,800,104        7,680,064     5,120,040            0
60.00% (7,680,064B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->60.00% (7,680,000B) 0x400798: _addNode (bstitr.c:130)
| ->60.00% (7,680,000B) 0x400879: addBSTree (bstitr.c:173)
|   ->60.00% (7,680,000B) 0x400C7D: main (bstitr.c:361)
|     
->00.00% (64B) in 1+ places, all below ms_print's threshold (01.00%)

